@model StoreViewModel

<h1>Газированные напитки</h1>

<!-- Фильтр по брендам -->
<div>
    <label for="brandFilter">Бренд:</label>
    <select id="brandFilter" name="brandFilter" onchange="filterDrinks()">
        <option value="">Все бренды</option>
        @foreach (var brand in Model.brands)
        {
                <option value="@brand.id">@brand.name</option>
        }
    </select>
</div>

<!-- Ползунки для минимальной и максимальной цены -->
<div>
    <label for="minPrice">Минимальная цена:</label>
    <input type="range" id="minPrice" name="minPrice" min="0" max="500" value="0" oninput="updateMinPriceValue(this.value)">
    <span id="minPriceValue">0</span> руб.
</div>

<div>
    <label for="maxPrice">Максимальная цена:</label>
    <input type="range" id="maxPrice" name="maxPrice" min="0" max="500" value="500" oninput="updateMaxPriceValue(this.value)">
    <span id="maxPriceValue">500</span> руб.
</div>

<!-- Контейнер для отображения напитков -->
<div id="drinksContainer">
    @await Html.PartialAsync("_DrinkListPartial", Model.drinks)
</div>

<script>
    function updateMinPriceValue(value) {
        document.getElementById('minPriceValue').innerText = value;
        filterDrinks();  // Обновление списка напитков при изменении
    }

    function updateMaxPriceValue(value) {
        document.getElementById('maxPriceValue').innerText = value;
        filterDrinks();  // Обновление списка напитков при изменении
    }

    function filterDrinks() {
        var minPrice = document.getElementById('minPrice').value;
        var maxPrice = document.getElementById('maxPrice').value;
        var brandId = document.getElementById('brandFilter').value;

        var url = `/Store/FilterDrinks?minPrice=${minPrice}&maxPrice=${maxPrice}&brandId=${brandId}`;

        fetch(url)
            .then(response => response.text())
            .then(data => {
                document.getElementById('drinksContainer').innerHTML = data;
            })
            .catch(error => console.error('Ошибка:', error));
    }
</script>
