// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SodaBox.DataAccess;

#nullable disable

namespace SodaBox.Migrations
{
    [DbContext(typeof(VendingMachineContext))]
    [Migration("20240920114416_NewDrinks")]
    partial class NewDrinks
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SodaBox.DataAccess.Entities.Brand", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("id");

                    b.ToTable("brands");

                    b.HasData(
                        new
                        {
                            id = 1,
                            name = "Coca Cola"
                        },
                        new
                        {
                            id = 2,
                            name = "Pepsi"
                        },
                        new
                        {
                            id = 3,
                            name = "Fanta"
                        },
                        new
                        {
                            id = 4,
                            name = "Sprite"
                        },
                        new
                        {
                            id = 5,
                            name = "Dr Pepper"
                        });
                });

            modelBuilder.Entity("SodaBox.DataAccess.Entities.Coin", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("imagePath")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("price")
                        .HasColumnType("int");

                    b.Property<int>("quantity")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("coins");

                    b.HasData(
                        new
                        {
                            id = 1,
                            imagePath = "images/coins/1.png",
                            price = 1,
                            quantity = 20
                        },
                        new
                        {
                            id = 2,
                            imagePath = "images/coins/2.png",
                            price = 2,
                            quantity = 20
                        },
                        new
                        {
                            id = 3,
                            imagePath = "images/coins/5.png",
                            price = 5,
                            quantity = 20
                        },
                        new
                        {
                            id = 4,
                            imagePath = "images/coins/10.png",
                            price = 10,
                            quantity = 20
                        });
                });

            modelBuilder.Entity("SodaBox.DataAccess.Entities.Drink", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("brandId")
                        .HasColumnType("int");

                    b.Property<string>("imagePath")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("price")
                        .HasColumnType("int");

                    b.Property<int>("quantity")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("brandId");

                    b.ToTable("drinks");

                    b.HasData(
                        new
                        {
                            id = 1,
                            brandId = 1,
                            imagePath = "images/drinks/coca_cola.png",
                            name = "Coca Cola",
                            price = 65,
                            quantity = 3
                        },
                        new
                        {
                            id = 2,
                            brandId = 1,
                            imagePath = "images/drinks/coca_cola_zero.png",
                            name = "Coca Cola Zero",
                            price = 70,
                            quantity = 0
                        },
                        new
                        {
                            id = 3,
                            brandId = 2,
                            imagePath = "images/drinks/pepsi.png",
                            name = "Pepsi",
                            price = 40,
                            quantity = 3
                        },
                        new
                        {
                            id = 4,
                            brandId = 2,
                            imagePath = "images/drinks/pepsi_zero.png",
                            name = "Pepsi Zero",
                            price = 45,
                            quantity = 3
                        },
                        new
                        {
                            id = 5,
                            brandId = 3,
                            imagePath = "images/drinks/fanta.png",
                            name = "Fanta",
                            price = 55,
                            quantity = 2
                        },
                        new
                        {
                            id = 6,
                            brandId = 4,
                            imagePath = "images/drinks/sprite.png",
                            name = "Sprite",
                            price = 55,
                            quantity = 0
                        },
                        new
                        {
                            id = 7,
                            brandId = 5,
                            imagePath = "images/drinks/dr_pepper.png",
                            name = "Dr Pepper",
                            price = 65,
                            quantity = 1
                        },
                        new
                        {
                            id = 8,
                            brandId = 5,
                            imagePath = "images/drinks/dr_pepper_cherry.png",
                            name = "Dr Pepper Cherry",
                            price = 40,
                            quantity = 1
                        });
                });

            modelBuilder.Entity("SodaBox.DataAccess.Entities.Order", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime>("orderDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("totalAmount")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("orders");
                });

            modelBuilder.Entity("SodaBox.DataAccess.Entities.OrderItem", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int?>("Orderid")
                        .HasColumnType("int");

                    b.Property<string>("brandName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("drinkName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<double>("price")
                        .HasColumnType("float");

                    b.Property<int>("quantity")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("Orderid");

                    b.ToTable("orderItems");
                });

            modelBuilder.Entity("SodaBox.DataAccess.Entities.Drink", b =>
                {
                    b.HasOne("SodaBox.DataAccess.Entities.Brand", "brand")
                        .WithMany("drinks")
                        .HasForeignKey("brandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("brand");
                });

            modelBuilder.Entity("SodaBox.DataAccess.Entities.OrderItem", b =>
                {
                    b.HasOne("SodaBox.DataAccess.Entities.Order", null)
                        .WithMany("orderItems")
                        .HasForeignKey("Orderid");
                });

            modelBuilder.Entity("SodaBox.DataAccess.Entities.Brand", b =>
                {
                    b.Navigation("drinks");
                });

            modelBuilder.Entity("SodaBox.DataAccess.Entities.Order", b =>
                {
                    b.Navigation("orderItems");
                });
#pragma warning restore 612, 618
        }
    }
}
